!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Tsumami=t():e.Tsumami=t()}(this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s="./src/index.js")}({"./src/cssFunc.js":
/*!************************!*\
  !*** ./src/cssFunc.js ***!
  \************************/
/*! exports provided: _px, _deg, _rotate, _skewY, _whileSpace, _returnTransformValue */function(e,t,r){"use strict";function n(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return i(e,t)}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,l=!0,s=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return l=e.done,e},e:function(e){s=!0,o=e},f:function(){try{l||null==r.return||r.return()}finally{if(s)throw o}}}}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}r.r(t),r.d(t,"_px",(function(){return a})),r.d(t,"_deg",(function(){return o})),r.d(t,"_rotate",(function(){return l})),r.d(t,"_skewY",(function(){return s})),r.d(t,"_whileSpace",(function(){return u})),r.d(t,"_returnTransformValue",(function(){return c}));var a=function(e){return e+"px"},o=function(e){return e+"deg"},l=function(e){return"rotate("+o(Math.floor(e))+")"},s=function(e){return"skewY("+o(Math.floor(e))+")"},u=function(e){var t,r="",i=n(e);try{for(i.s();!(t=i.n()).done;){r+=t.value+" "}}catch(e){i.e(e)}finally{i.f()}return r},c=function(e,t){var r=t+"(";return+e.replace(r,"").replace("deg)","")}},"./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return u}));var n=r(/*! ./cssFunc */"./src/cssFunc.js");function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=t.get(e);if(!r)throw new TypeError("attempted to get private field on non-instance");return r.get?r.get.call(e):r.value}function s(e,t,r){var n=t.get(e);if(!n)throw new TypeError("attempted to set private field on non-instance");if(n.set)n.set.call(e,r);else{if(!n.writable)throw new TypeError("attempted to set read only private field");n.value=r}return r}var u=function e(t){var r,i,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c.set(this,{writable:!0,value:void 0}),p.set(this,{writable:!0,value:void 0}),f.set(this,{writable:!0,value:void 0}),d.set(this,{writable:!0,value:void 0}),h.set(this,{writable:!0,value:void 0}),v.set(this,{writable:!0,value:void 0}),m.set(this,{writable:!0,value:void 0}),b.set(this,{writable:!0,value:void 0}),w.set(this,{writable:!0,value:void 0}),g.set(this,{writable:!0,value:void 0}),M.set(this,{writable:!0,value:void 0}),y.set(this,{writable:!0,value:void 0}),_.set(this,{writable:!0,value:void 0}),k.set(this,{writable:!0,value:void 0}),x.set(this,{writable:!0,value:function(){o.meterbg=document.createElement("div"),o.pie=document.createElement("ul"),o.meterbghole=document.createElement("div"),o.meterbgholeout=document.createElement("div"),o.tsumami=document.createElement("div"),o.point=document.createElement("div"),o.sliceMeterBg=[],o.sliceMeterBgContents=[],o.sliceMeter=[],o.sliceMeterContents=[]}}),j.set(this,{writable:!0,value:function(){l(o,W).call(o,l(o,p),{center:!1,position:"relative",width:n._px(l(o,c)),height:n._px(l(o,c)),background:l(o,f)}),l(o,W).call(o,o.meterbg,{center:!0,borderRadius:"50%",background:l(o,h),width:n._px(l(o,c)/l(o,b)),height:n._px(l(o,c)/l(o,b))},"tsumami-meterbg",l(o,p)),l(o,W).call(o,o.pie,{center:!1,overflow:"hidden",borderRadius:"50%",position:"absolute",padding:0,margin:0,width:n._px(l(o,c)),height:n._px(l(o,c)),left:n._px((l(o,c)-l(o,c)/l(o,b))/-2),top:n._px((l(o,c)-l(o,c)/l(o,b))/-2)},"tsumami-meter",o.meterbg),l(o,P).call(o,l(o,m)),l(o,Y).call(o,l(o,m)),l(o,W).call(o,o.meterbghole,{center:!0,borderRadius:"50%",width:n._px(l(o,c)/l(o,b)-l(o,v)),height:n._px(l(o,c)/l(o,b)-l(o,v)),background:l(o,f)},"tsumami-meterhole",o.meterbg),l(o,W).call(o,o.meterbgholeout,{center:!1,position:"absolute",borderRadius:"50%",width:n._px(l(o,c)/l(o,b)),height:n._px(l(o,c)/l(o,b)),background:"rgba(0,0,0,0)",border:n._whileSpace(["solid",n._px((l(o,c)-l(o,c)/l(o,b))/2),l(o,f)]),margin:0,top:"50%",left:"50%",transform:n._whileSpace(["translateX(-50%)","translateY(-50%)"])},"tsumami-meterhole-out",o.meterbg),l(o,W).call(o,o.tsumami,{center:!0,userSelect:"none",width:n._px(l(o,c)/2),height:n._px(l(o,c)/2),background:l(o,d),borderRadius:"50%",transform:n._rotate(l(o,m)/-2)},"tsumami-inner",l(o,p)),l(o,W).call(o,o.point,{center:!0,width:"10%",height:"20%",background:l(o,_),transform:"translateY(-100%)"},"tsumami-point",o.tsumami),l(o,B).call(o,o.tsumami);var e=l(o,k)*l(o,m)/(l(o,g)-l(o,w));l(o,L).call(o,e),o.tsumami.style.transform=n._rotate(e-l(o,m)/2),l(o,I).value=l(o,k)}}),O.set(this,{writable:!0,value:function(){return{position:"absolute",top:0,right:0,bottom:0,left:0,margin:"auto"}}}),W.set(this,{writable:!0,value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;for(var i in void 0!==r&&(e.className=r),t.center&&(t=Object.assign(l(o,O).call(o),t)),delete t.center,t)e.style[i]=t[i];void 0!==n&&n.appendChild(e)}}),E.set(this,{writable:!0,value:{center:!1,overflow:"hidden",position:"absolute",width:"50%",height:"50%",transformOrigin:"0% 100%"}}),S.set(this,{writable:!0,value:{center:!1,position:"absolute",left:"-100%",borderRadius:"50%",width:"200%",height:"200%"}}),P.set(this,{writable:!0,value:function(e){for(var t=(e=e>360?0:360-e)/90+(e%90==0?0:1),r=0;r<t;r++){var i=0;0!=e?(e>=90?(i=90,e-=90):(i=e,e=0),o.sliceMeterBg[r]=document.createElement("li"),o.sliceMeterBgContents[r]=document.createElement("div"),l(o,W).call(o,o.sliceMeterBg[r],a(a({},l(o,E)),{},{top:0,right:0,transform:n._whileSpace([n._rotate(i/-2+180-45*r+e/2),n._skewY(-90+i)])}),"sliceMeterBg",o.pie),l(o,W).call(o,o.sliceMeterBgContents[r],a(a({},l(o,S)),{},{background:l(o,f),transform:n._skewY(90-i)}),"sliceMeterBg-contents",o.sliceMeterBg[r])):(o.sliceMeterBg[r]="",o.sliceMeterBgContents[r]="")}}}),Y.set(this,{writable:!0,value:function(e){var t=e/90+(e%90==0?0:1);e=e>360?0:360-e;for(var r=[{top:n._px(0),right:n._px(-1)},{top:n._px(1),right:n._px(0)},{top:n._px(0),right:n._px(1)},{top:n._px(-1),right:n._px(0)}],i=0;i<t;i++)o.sliceMeter[i]=document.createElement("li"),o.sliceMeterContents[i]=document.createElement("div"),l(o,W).call(o,o.sliceMeter[i],a(a({},l(o,E)),{},{transform:n._whileSpace([n._rotate(180+90*i+e/2),n._skewY(-90)])},r[i]),"sliceMeter",o.pie),l(o,W).call(o,o.sliceMeterContents[i],a(a({},l(o,S)),{},{background:l(o,y),transform:n._skewY(90)}),"sliceMeter-contents",o.sliceMeter[i])}}),B.set(this,{writable:!0,value:function(e){s(o,C,!1),s(o,T,0),e.addEventListener("pointerdown",l(o,A),!1),window.addEventListener("pointermove",(function(t){l(o,R).call(o,t,e)}),!1),window.addEventListener("pointerup",l(o,D),!1)}}),C.set(this,{writable:!0,value:void 0}),T.set(this,{writable:!0,value:void 0}),A.set(this,{writable:!0,value:function(e){s(o,C,!0),s(o,T,e.clientY),console.log("MouseDown")}}),R.set(this,{writable:!0,value:function(e,t){if(l(o,C)){var r=n._returnTransformValue(t.style.transform,"rotate")+3*(e.clientY-l(o,T)),i=l(o,z).call(o,r,-l(o,m)/2,l(o,m)/2);t.style.transform=n._rotate(i),s(o,T,e.clientY),l(o,L).call(o,i+l(o,m)/2),l(o,I).value=(l(o,g)-l(o,w))*(i+l(o,m)/2)/l(o,m)+l(o,w),console.log("MouseMove")}}}),D.set(this,{writable:!0,value:function(e){s(o,C,!1),console.log("MouseUp")}}),I.set(this,{writable:!0,value:(r=Object.create(null),i=0,Object.defineProperty(r,"value",{set:function(e){""!==l(o,M)&&(l(o,M).value=e),i=e},get:function(){return i}}),r)}),L.set(this,{writable:!0,value:function(e){for(var t=o.sliceMeter,r=o.sliceMeterContents,i=0;i<o.sliceMeter.length;i++){var a=0;e>=90?(a=90,e-=90):(a=e,e=0);var l=t[i].style.transform.split(" ");t[i].style.transform=n._whileSpace([l[0],n._skewY(-90+a)]),r[i].style.transform=n._skewY(90-a)}}}),z.set(this,{writable:!0,value:function(e,t,r){return e<t?e=t:e>r&&(e=r),e}}),s(this,c,(t=void 0===t?{}:t).size||100),s(this,p,t.target||document.getElementById("tsumami")),s(this,f,t.bgcolor||"red"),s(this,d,t.tmmcolor||"yellow"),s(this,h,t.mbgcolor||"black"),s(this,v,t.meterSize||10),s(this,m,t.degree||270),s(this,b,t.scale||1.2),s(this,w,t.min||0),s(this,g,t.max||100),s(this,M,t.obj||""),s(this,y,t.mcolor||"blue"),s(this,_,t.point||"purple"),s(this,k,t.value||l(this,w)),l(this,x).call(this),l(this,j).call(this)},c=new WeakMap,p=new WeakMap,f=new WeakMap,d=new WeakMap,h=new WeakMap,v=new WeakMap,m=new WeakMap,b=new WeakMap,w=new WeakMap,g=new WeakMap,M=new WeakMap,y=new WeakMap,_=new WeakMap,k=new WeakMap,x=new WeakMap,j=new WeakMap,O=new WeakMap,W=new WeakMap,E=new WeakMap,S=new WeakMap,P=new WeakMap,Y=new WeakMap,B=new WeakMap,C=new WeakMap,T=new WeakMap,A=new WeakMap,R=new WeakMap,D=new WeakMap,I=new WeakMap,L=new WeakMap,z=new WeakMap;o(u,"testlog",(function(){console.log("testlog")}))}}).default}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,