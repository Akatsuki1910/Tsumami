!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Tsumami=t():e.Tsumami=t()}(this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";function n(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return i(e,t)}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,l=!0,s=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return l=e.done,e},e:function(e){s=!0,o=e},f:function(){try{l||null==r.return||r.return()}finally{if(s)throw o}}}}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}r.r(t),r.d(t,"default",(function(){return v}));var a=function(e){return e+"px"},o=function(e){return e+"deg"},l=function(e){return"rotate("+o(Math.floor(e))+")"},s=function(e){return"skewY("+o(Math.floor(e))+")"},u=function(e){var t,r="",i=n(e);try{for(i.s();!(t=i.n()).done;){r+=t.value+" "}}catch(e){i.e(e)}finally{i.f()}return r};function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function f(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){d(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=t.get(e);if(!r)throw new TypeError("attempted to get private field on non-instance");return r.get?r.get.call(e):r.value}function h(e,t,r){var n=t.get(e);if(!n)throw new TypeError("attempted to set private field on non-instance");if(n.set)n.set.call(e,r);else{if(!n.writable)throw new TypeError("attempted to set read only private field");n.value=r}return r}var v=function e(t){var r,n,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),m.set(this,{writable:!0,value:void 0}),b.set(this,{writable:!0,value:void 0}),w.set(this,{writable:!0,value:void 0}),g.set(this,{writable:!0,value:void 0}),y.set(this,{writable:!0,value:void 0}),M.set(this,{writable:!0,value:void 0}),k.set(this,{writable:!0,value:void 0}),O.set(this,{writable:!0,value:void 0}),W.set(this,{writable:!0,value:void 0}),j.set(this,{writable:!0,value:void 0}),E.set(this,{writable:!0,value:void 0}),P.set(this,{writable:!0,value:void 0}),S.set(this,{writable:!0,value:void 0}),x.set(this,{writable:!0,value:void 0}),B.set(this,{writable:!0,value:function(){i.meterbg=document.createElement("div"),i.pie=document.createElement("ul"),i.meterbghole=document.createElement("div"),i.meterbgholeout=document.createElement("div"),i.tsumami=document.createElement("div"),i.point=document.createElement("div"),i.sliceMeterBg=[],i.sliceMeterBgContents=[],i.sliceMeter=[],i.sliceMeterContents=[]}}),C.set(this,{writable:!0,value:function(){p(i,A).call(i,p(i,b),{center:!1,position:"relative",width:a(p(i,m)),height:a(p(i,m)),background:p(i,w)}),p(i,A).call(i,i.meterbg,{center:!0,borderRadius:"50%",background:p(i,y),width:a(p(i,m)/p(i,O)),height:a(p(i,m)/p(i,O))},"tsumami-meterbg",p(i,b)),p(i,A).call(i,i.pie,{center:!1,overflow:"hidden",borderRadius:"50%",position:"absolute",padding:0,margin:0,width:a(p(i,m)),height:a(p(i,m)),left:a((p(i,m)-p(i,m)/p(i,O))/-2),top:a((p(i,m)-p(i,m)/p(i,O))/-2)},"tsumami-meter",i.meterbg),p(i,_).call(i,p(i,k)),p(i,D).call(i,p(i,k)),p(i,A).call(i,i.meterbghole,{center:!0,borderRadius:"50%",width:a(p(i,m)/p(i,O)-p(i,M)),height:a(p(i,m)/p(i,O)-p(i,M)),background:p(i,w)},"tsumami-meterhole",i.meterbg),p(i,A).call(i,i.meterbgholeout,{center:!1,position:"absolute",borderRadius:"50%",width:a(p(i,m)/p(i,O)),height:a(p(i,m)/p(i,O)),background:"rgba(0,0,0,0)",border:u(["solid",a((p(i,m)-p(i,m)/p(i,O))/2),p(i,w)]),margin:0,top:"50%",left:"50%",transform:u(["translateX(-50%)","translateY(-50%)"])},"tsumami-meterhole-out",i.meterbg),p(i,A).call(i,i.tsumami,{center:!0,userSelect:"none",width:a(p(i,m)/2),height:a(p(i,m)/2),background:p(i,g),borderRadius:"50%",transform:l(p(i,k)/-2)},"tsumami-inner",p(i,b)),p(i,A).call(i,i.point,{center:!0,width:"10%",height:"20%",background:p(i,S),transform:"translateY(-100%)"},"tsumami-point",i.tsumami),p(i,I).call(i,i.tsumami);var e=p(i,x)*p(i,k)/(p(i,j)-p(i,W));p(i,q).call(i,e),i.tsumami.style.transform=l(e-p(i,k)/2),p(i,$).value=p(i,x)}}),T.set(this,{writable:!0,value:function(){return{position:"absolute",top:0,right:0,bottom:0,left:0,margin:"auto"}}}),A.set(this,{writable:!0,value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;for(var a in void 0!==r&&(e.className=r),t.center&&(t=Object.assign(p(i,T).call(i),t)),delete t.center,t)e.style[a]=t[a];void 0!==n&&n.appendChild(e)}}),R.set(this,{writable:!0,value:{center:!1,overflow:"hidden",position:"absolute",width:"50%",height:"50%",transformOrigin:"0% 100%"}}),Y.set(this,{writable:!0,value:{center:!1,position:"absolute",left:"-100%",borderRadius:"50%",width:"200%",height:"200%"}}),_.set(this,{writable:!0,value:function(e){for(var t=(e=e>360?0:360-e)/90+(e%90==0?0:1),r=0;r<t;r++){var n=0;0!=e?(e>=90?(n=90,e-=90):(n=e,e=0),i.sliceMeterBg[r]=document.createElement("li"),i.sliceMeterBgContents[r]=document.createElement("div"),p(i,A).call(i,i.sliceMeterBg[r],f(f({},p(i,R)),{},{top:0,right:0,transform:u([l(n/-2+180-45*r+e/2),s(-90+n)])}),"sliceMeterBg",i.pie),p(i,A).call(i,i.sliceMeterBgContents[r],f(f({},p(i,Y)),{},{background:p(i,w),transform:s(90-n)}),"sliceMeterBg-contents",i.sliceMeterBg[r])):(i.sliceMeterBg[r]="",i.sliceMeterBgContents[r]="")}}}),D.set(this,{writable:!0,value:function(e){var t=e/90+(e%90==0?0:1);e=e>360?0:360-e;for(var r=[{top:a(0),right:a(-1)},{top:a(1),right:a(0)},{top:a(0),right:a(1)},{top:a(-1),right:a(0)}],n=0;n<t;n++)i.sliceMeter[n]=document.createElement("li"),i.sliceMeterContents[n]=document.createElement("div"),p(i,A).call(i,i.sliceMeter[n],f(f({},p(i,R)),{},{transform:u([l(180+90*n+e/2),s(-90)])},r[n]),"sliceMeter",i.pie),p(i,A).call(i,i.sliceMeterContents[n],f(f({},p(i,Y)),{},{background:p(i,P),transform:s(90)}),"sliceMeter-contents",i.sliceMeter[n])}}),I.set(this,{writable:!0,value:function(e){h(i,L,!1),h(i,z,0),e.addEventListener("pointerdown",p(i,N),!1),window.addEventListener("pointermove",(function(t){p(i,U).call(i,t,e)}),!1),window.addEventListener("pointerup",p(i,X),!1)}}),L.set(this,{writable:!0,value:void 0}),z.set(this,{writable:!0,value:void 0}),N.set(this,{writable:!0,value:function(e){h(i,L,!0),h(i,z,e.clientY)}}),U.set(this,{writable:!0,value:function(e,t){if(p(i,L)){var r=function(e,t){var r=t+"(";return+e.replace(r,"").replace("deg)","")}(t.style.transform,"rotate")+3*(e.clientY-p(i,z)),n=p(i,F).call(i,r,-p(i,k)/2,p(i,k)/2);t.style.transform=l(n),h(i,z,e.clientY),p(i,q).call(i,n+p(i,k)/2),p(i,$).value=(p(i,j)-p(i,W))*(n+p(i,k)/2)/p(i,k)+p(i,W)}}}),X.set(this,{writable:!0,value:function(e){h(i,L,!1)}}),$.set(this,{writable:!0,value:(r=Object.create(null),n=0,Object.defineProperty(r,"value",{set:function(e){""!==p(i,E)&&(p(i,E).value=e),n=e},get:function(){return n}}),r)}),q.set(this,{writable:!0,value:function(e){for(var t=i.sliceMeter,r=i.sliceMeterContents,n=0;n<i.sliceMeter.length;n++){var a=0;e>=90?(a=90,e-=90):(a=e,e=0);var o=t[n].style.transform.split(" ");t[n].style.transform=u([o[0],s(-90+a)]),r[n].style.transform=s(90-a)}}}),F.set(this,{writable:!0,value:function(e,t,r){return e<t?e=t:e>r&&(e=r),e}}),h(this,m,(t=void 0===t?{}:t).size||100),h(this,b,t.target||document.getElementById("tsumami")),h(this,w,t.bgcolor||"red"),h(this,g,t.tmmcolor||"yellow"),h(this,y,t.mbgcolor||"black"),h(this,M,t.meterSize||10),h(this,k,t.degree||270),h(this,O,t.scale||1.2),h(this,W,t.min||0),h(this,j,t.max||100),h(this,E,t.obj||""),h(this,P,t.mcolor||"blue"),h(this,S,t.point||"purple"),h(this,x,t.value||p(this,W)),p(this,B).call(this),p(this,C).call(this)},m=new WeakMap,b=new WeakMap,w=new WeakMap,g=new WeakMap,y=new WeakMap,M=new WeakMap,k=new WeakMap,O=new WeakMap,W=new WeakMap,j=new WeakMap,E=new WeakMap,P=new WeakMap,S=new WeakMap,x=new WeakMap,B=new WeakMap,C=new WeakMap,T=new WeakMap,A=new WeakMap,R=new WeakMap,Y=new WeakMap,_=new WeakMap,D=new WeakMap,I=new WeakMap,L=new WeakMap,z=new WeakMap,N=new WeakMap,U=new WeakMap,X=new WeakMap,$=new WeakMap,q=new WeakMap,F=new WeakMap;d(v,"testlog",(function(){console.log("testlog")}))}]).default}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,