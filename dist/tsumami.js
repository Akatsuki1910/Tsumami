!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Tsumami=t():e.Tsumami=t()}(this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";function n(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return i(e,t)}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,l=!0,s=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return l=e.done,e},e:function(e){s=!0,o=e},f:function(){try{l||null==r.return||r.return()}finally{if(s)throw o}}}}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}r.r(t),r.d(t,"default",(function(){return h}));var a=function(e){return e+"px"},o=function(e){return e+"deg"},l=function(e){return"rotate("+o(Math.floor(e))+")"},s=function(e){return"skewY("+o(Math.floor(e))+")"},u=function(e){var t,r="",i=n(e);try{for(i.s();!(t=i.n()).done;){r+=t.value+" "}}catch(e){i.e(e)}finally{i.f()}return r};function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function f(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){d(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function v(e,t){var r=t.get(e);if(!r)throw new TypeError("attempted to get private field on non-instance");return r.get?r.get.call(e):r.value}function p(e,t,r){var n=t.get(e);if(!n)throw new TypeError("attempted to set private field on non-instance");if(n.set)n.set.call(e,r);else{if(!n.writable)throw new TypeError("attempted to set read only private field");n.value=r}return r}var h=function e(t){var r,n,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),m.set(this,{writable:!0,value:void 0}),b.set(this,{writable:!0,value:void 0}),w.set(this,{writable:!0,value:void 0}),g.set(this,{writable:!0,value:void 0}),M.set(this,{writable:!0,value:void 0}),y.set(this,{writable:!0,value:void 0}),k.set(this,{writable:!0,value:void 0}),W.set(this,{writable:!0,value:void 0}),O.set(this,{writable:!0,value:void 0}),j.set(this,{writable:!0,value:void 0}),E.set(this,{writable:!0,value:void 0}),P.set(this,{writable:!0,value:void 0}),S.set(this,{writable:!0,value:void 0}),x.set(this,{writable:!0,value:void 0}),B.set(this,{writable:!0,value:void 0}),C.set(this,{writable:!0,value:void 0}),T.set(this,{writable:!0,value:void 0}),A.set(this,{writable:!0,value:function(){i.meterbg=document.createElement("div"),i.pie=document.createElement("ul"),i.meterbghole=document.createElement("div"),i.meterbgholeout=document.createElement("div"),i.tsumami=document.createElement("div"),i.point=document.createElement("div"),i.sliceMeterBg=[],i.sliceMeterBgContents=[],i.sliceMeter=[],i.sliceMeterContents=[]}}),R.set(this,{writable:!0,value:function(){var e=["center"];for(var t in p(i,T,0),e)if(e[t]===v(i,B)){p(i,T,t+1);break}1==v(i,T)&&(p(i,x,0),p(i,O,-v(i,C)),p(i,j,v(i,C)))}}),Y.set(this,{writable:!0,value:function(){if(v(i,D).call(i,v(i,b),{center:!1,position:"relative",width:a(v(i,m)),height:a(v(i,m)),background:v(i,w)}),v(i,D).call(i,i.meterbg,{center:!0,borderRadius:"50%",background:v(i,M),width:a(v(i,m)/v(i,W)),height:a(v(i,m)/v(i,W))},"tsumami-meterbg",v(i,b)),v(i,D).call(i,i.pie,{center:!1,overflow:"hidden",borderRadius:"50%",position:"absolute",padding:0,margin:0,width:a(v(i,m)),height:a(v(i,m)),left:a((v(i,m)-v(i,m)/v(i,W))/-2),top:a((v(i,m)-v(i,m)/v(i,W))/-2)},"tsumami-meter",i.meterbg),v(i,z).call(i,v(i,k)),v(i,N).call(i,v(i,k)),v(i,D).call(i,i.meterbghole,{center:!0,borderRadius:"50%",width:a(v(i,m)/v(i,W)-v(i,y)),height:a(v(i,m)/v(i,W)-v(i,y)),background:v(i,w)},"tsumami-meterhole",i.meterbg),v(i,D).call(i,i.meterbgholeout,{center:!1,position:"absolute",borderRadius:"50%",width:a(v(i,m)/v(i,W)),height:a(v(i,m)/v(i,W)),background:"rgba(0,0,0,0)",border:u(["solid",a((v(i,m)-v(i,m)/v(i,W))/2),v(i,w)]),margin:0,top:"50%",left:"50%",transform:u(["translateX(-50%)","translateY(-50%)"])},"tsumami-meterhole-out",i.meterbg),v(i,D).call(i,i.tsumami,{center:!0,userSelect:"none",width:a(v(i,m)/2),height:a(v(i,m)/2),background:v(i,g),borderRadius:"50%",transform:l(v(i,k)/-2)},"tsumami-inner",v(i,b)),v(i,D).call(i,i.point,{center:!0,width:"10%",height:"20%",background:v(i,S),transform:"translateY(-100%)"},"tsumami-point",i.tsumami),v(i,U).call(i,i.tsumami),0==v(i,T)){var e=v(i,x)*v(i,k)/(v(i,j)-v(i,O));v(i,H).call(i,e),i.tsumami.style.transform=l(e-v(i,k)/2)}else 1==v(i,T)&&(i.tsumami.style.transform=l(0));v(i,G).value=v(i,x)}}),_.set(this,{writable:!0,value:function(){return{position:"absolute",top:0,right:0,bottom:0,left:0,margin:"auto"}}}),D.set(this,{writable:!0,value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;for(var a in void 0!==r&&(e.className=r),t.center&&(t=Object.assign(v(i,_).call(i),t)),delete t.center,t)e.style[a]=t[a];void 0!==n&&n.appendChild(e)}}),I.set(this,{writable:!0,value:{center:!1,overflow:"hidden",position:"absolute",width:"50%",height:"50%",transformOrigin:"0% 100%"}}),L.set(this,{writable:!0,value:{center:!1,position:"absolute",left:"-100%",borderRadius:"50%",width:"200%",height:"200%"}}),z.set(this,{writable:!0,value:function(e){e=e>360?0:360-e;for(var t=0;t<4;t++){var r=0;0!=e?(e>=90?(r=90,e-=90):(r=e,e=0),i.sliceMeterBg[t]=document.createElement("li"),i.sliceMeterBgContents[t]=document.createElement("div"),v(i,D).call(i,i.sliceMeterBg[t],f(f({},v(i,I)),{},{top:0,right:0,transform:u([l(r/-2+180-45*t+e/2),s(-90+r)])}),"sliceMeterBg",i.pie),v(i,D).call(i,i.sliceMeterBgContents[t],f(f({},v(i,L)),{},{background:v(i,w),transform:s(90-r)}),"sliceMeterBg-contents",i.sliceMeterBg[t])):(i.sliceMeterBg[t]="",i.sliceMeterBgContents[t]="")}}}),N.set(this,{writable:!0,value:function(e){e=e>360?0:360-e;for(var t=[{top:a(0),right:a(-1)},{top:a(1),right:a(0)},{top:a(0),right:a(1)},{top:a(-1),right:a(0)}],r=[0,90,0,-90],n=0;n<4;n++){i.sliceMeter[n]=document.createElement("li"),i.sliceMeterContents[n]=document.createElement("div");var o={transform:u([l(180+90*n+e/2),s(-90)])};1==v(i,T)&&(o={transform:u([l(r[n]),s(-90)])}),v(i,D).call(i,i.sliceMeter[n],f(f(f({},v(i,I)),o),t[n]),"sliceMeter",i.pie),v(i,D).call(i,i.sliceMeterContents[n],f(f({},v(i,L)),{},{background:v(i,P),transform:s(90)}),"sliceMeter-contents",i.sliceMeter[n])}}}),U.set(this,{writable:!0,value:function(e){p(i,V,!1),p(i,X,0),e.addEventListener("pointerdown",v(i,$),!1),window.addEventListener("pointermove",(function(t){v(i,q).call(i,t,e)}),!1),window.addEventListener("pointerup",v(i,F),!1)}}),V.set(this,{writable:!0,value:void 0}),X.set(this,{writable:!0,value:void 0}),$.set(this,{writable:!0,value:function(e){p(i,V,!0),p(i,X,e.clientY)}}),q.set(this,{writable:!0,value:function(e,t){if(v(i,V)){var r=function(e,t){var r=t+"(";return+e.replace(r,"").replace("deg)","")}(t.style.transform,"rotate")+3*(e.clientY-v(i,X)),n=v(i,J).call(i,r,-v(i,k)/2,v(i,k)/2);t.style.transform=l(n),p(i,X,e.clientY),v(i,H).call(i,n+v(i,k)/2),v(i,G).value=(v(i,j)-v(i,O))*(n+v(i,k)/2)/v(i,k)+v(i,O)}}}),F.set(this,{writable:!0,value:function(e){p(i,V,!1)}}),G.set(this,{writable:!0,value:(r=Object.create(null),n=0,Object.defineProperty(r,"value",{set:function(e){""!==v(i,E)&&(v(i,E).value=e),n=e},get:function(){return n}}),r)}),H.set(this,{writable:!0,value:function(e){var t=i.sliceMeter,r=i.sliceMeterContents;if(0==v(i,T))for(var n=0;n<i.sliceMeter.length;n++){var a=0;e>=90?(a=90,e-=90):(a=e,e=0);var o=t[n].style.transform.split(" ")[0];t[n].style.transform=u([o,s(-90+a)]),r[n].style.transform=s(90-a)}if(1==v(i,T)){var c=[[-90,-1],[0,-1],[0,0],[90,0]];e-=v(i,k)/2;a=[v(i,J).call(i,-e-90,0,90),v(i,J).call(i,-e,0,90),v(i,J).call(i,e,0,90),v(i,J).call(i,e-90,0,90)];for(var f=0;f<i.sliceMeter.length;f++)t[f].style.transform=u([l(c[f][0]+c[f][1]*a[f]),s(-90+a[f])]),r[f].style.transform=s(90-a[f])}}}),J.set(this,{writable:!0,value:function(e,t,r){return e<t?e=t:e>r&&(e=r),e}}),p(this,m,(t=void 0===t?{}:t).size||100),p(this,b,t.target||document.getElementById("tsumami")),p(this,w,t.bgcolor||"red"),p(this,g,t.tmmcolor||"yellow"),p(this,M,t.mbgcolor||"black"),p(this,y,t.meterSize||10),p(this,k,t.degree||270),p(this,W,t.scale||1.2),p(this,O,t.min||0),p(this,j,t.max||100),p(this,E,t.obj||""),p(this,P,t.mcolor||"blue"),p(this,S,t.point||"purple"),p(this,x,t.value||v(this,O)),p(this,B,t.mode||"nomal"),p(this,C,t.centerValue||50),v(this,A).call(this),v(this,R).call(this),v(this,Y).call(this)},m=new WeakMap,b=new WeakMap,w=new WeakMap,g=new WeakMap,M=new WeakMap,y=new WeakMap,k=new WeakMap,W=new WeakMap,O=new WeakMap,j=new WeakMap,E=new WeakMap,P=new WeakMap,S=new WeakMap,x=new WeakMap,B=new WeakMap,C=new WeakMap,T=new WeakMap,A=new WeakMap,R=new WeakMap,Y=new WeakMap,_=new WeakMap,D=new WeakMap,I=new WeakMap,L=new WeakMap,z=new WeakMap,N=new WeakMap,U=new WeakMap,V=new WeakMap,X=new WeakMap,$=new WeakMap,q=new WeakMap,F=new WeakMap,G=new WeakMap,H=new WeakMap,J=new WeakMap;d(h,"testlog",(function(){console.log("testlog")}))}]).default}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,